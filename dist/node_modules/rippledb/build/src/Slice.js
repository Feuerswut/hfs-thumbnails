"use strict";

exports.__esModule = true;
exports.default = void 0;

var _Buffer = require("./Buffer");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Slice {
  constructor(value = _Buffer.Buffer.alloc(0)) {
    _defineProperty(this, "_buffer", void 0);

    if (value instanceof Slice) {
      this._buffer = value._buffer;
    } else if (_Buffer.Buffer.isBuffer(value)) {
      this._buffer = value;
    } else if (typeof value === "string") {
      this._buffer = _Buffer.Buffer.fromString(value);
    } else {
      this._buffer = _Buffer.Buffer.fromArrayBuffer(value);
    }
  }

  get buffer() {
    return this._buffer;
  }

  set buffer(buf) {
    this._buffer = buf;
  }

  get length() {
    return this._buffer.length;
  }

  get size() {
    return this._buffer.length;
  }

  toString() {
    return this._buffer.toString();
  }

  clear() {
    this._buffer = _Buffer.Buffer.alloc(0);
  }

  compare(slice) {
    return _Buffer.Buffer.compare(this._buffer, slice.buffer);
  }

  isEqual(slice) {
    return this.compare(slice) === 0;
  }

}

exports.default = Slice;
//# sourceMappingURL=Slice.js.map