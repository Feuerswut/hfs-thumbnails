"use strict";

exports.__esModule = true;
exports.default = void 0;

/**
 * Copyright (c) 2018-present, heineiuo.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
class IteratorHelper {
  static wrap(iterator, callback) {
    if (Symbol.iterator in iterator) {
      const it = iterator;

      it.return = () => {
        const value = it.next().value;
        callback(value);
        return {
          done: true,
          value
        };
      };

      return it;
    }

    iterator.return = async () => {
      try {
        const value = (await iterator.next()).value;
        callback(value);
        return {
          done: true,
          value
        };
      } catch (e) {
        callback(e);
        return {
          done: true,
          value: e
        };
      }
    };

    return iterator;
  }

  static makeAsync(iterator) {
    const asyncIter = {
      return: async value => {
        try {
          const value = iterator.next().value;
          return {
            done: true,
            value
          };
        } catch (e) {
          return {
            done: true,
            value: e
          };
        }
      },
      next: async value => {
        return iterator.next();
      }
    };
    return {
      next: asyncIter.next,

      [Symbol.asyncIterator]() {
        return asyncIter;
      }

    };
  }

}

exports.default = IteratorHelper;
//# sourceMappingURL=IteratorHelper.js.map