"use strict";

exports.__esModule = true;
exports.createHexStringFromDecimal = createHexStringFromDecimal;
exports.kHeaderSize = exports.kBlockSize = exports.kMaxRecordType = exports.RecordType = void 0;

/**
 * Copyright (c) 2018-present, heineiuo.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
let RecordType;
exports.RecordType = RecordType;

(function (RecordType) {
  RecordType[RecordType["kZeroType"] = 0] = "kZeroType";
  RecordType[RecordType["kFullType"] = 1] = "kFullType";
  RecordType[RecordType["kFirstType"] = 2] = "kFirstType";
  RecordType[RecordType["kMiddleType"] = 3] = "kMiddleType";
  RecordType[RecordType["kLastType"] = 4] = "kLastType";
})(RecordType || (exports.RecordType = RecordType = {}));

function createHexStringFromDecimal(decimal) {
  let str = decimal.toString(16);

  while (str.length < 4) {
    str = `0${str}`;
  }

  return str;
}

const kMaxRecordType = RecordType.kLastType;
exports.kMaxRecordType = kMaxRecordType;
const kBlockSize = 32768; // Header is checksum (4 bytes), length (2 bytes), type (1 byte).

exports.kBlockSize = kBlockSize;
const kHeaderSize = 4 + 2 + 1;
exports.kHeaderSize = kHeaderSize;
//# sourceMappingURL=LogFormat.js.map