"use strict";

exports.__esModule = true;
exports.WriterQueue = exports.Writer = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Copyright (c) 2018-present, heineiuo.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
class Writer {
  constructor() {
    _defineProperty(this, "batch", void 0);

    _defineProperty(this, "sync", false);

    _defineProperty(this, "done", false);

    _defineProperty(this, "resolve", void 0);
  }

  signal() {
    if (this.resolve) this.resolve();
    delete this.resolve;
  }

  wait() {
    delete this.resolve;
    return new Promise(resolve => this.resolve = resolve);
  }

}

exports.Writer = Writer;

class WriterQueue {
  constructor() {
    _defineProperty(this, "list", []);
  }

  push(writer) {
    this.list.push(writer);
  }

  front() {
    return this.list[0];
  }

  popFront() {
    this.list.shift();
  }

  get length() {
    return this.list.length;
  }

  *iterator(start = 0) {
    for (let i = start; i < this.list.length; i++) {
      yield this.list[i];
    }
  }

}

exports.WriterQueue = WriterQueue;
//# sourceMappingURL=WriterQueue.js.map